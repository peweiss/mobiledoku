<?xml version="1.0" encoding="utf-8"?>
<!-- 
Getränkezubereitung-Start-Screen mit Implementierung Video/Grafik, Liste mit Erklärungs-Steps, Slider-Navigation

Autor: 		Petra Weiss
Datum:		10.3.2014
Gesehen:	
-->	
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark" 
		title="Getraenkezubereitung"
		viewActivate="onViewActivated()"
		creationComplete="initPlayer()"
		viewDeactivate="videoPlayer.stopMovie()"
		gestureSwipe="onSwipe(event)">
	
	
	<fx:Script>
		<![CDATA[
			import mx.core.FlexGlobals;
			
			import renderers.SliderListRenderer;
			
			// importiere Views, auf die verwiesen wird
			import views.gzb.gzb_2;
			import views.gzb.gzb_3;
			import views.gzb.gzb_4;
			import views.gzb.gzb_5;
			
			// onViewActivated und initPlayer werden bei "viewActivate" ausgeführt
			protected function onViewActivated():void{				
				// Setze Farbe der ActionBar -> setze Klasse für s:ViewNavigator
				navigator.setStyle("styleName", "gzb");
				
				// definiere Breite der Trennlinie & Sliderlist
				trennlinie.width = FlexGlobals.topLevelApplication.setContentWidth();
				sliderList.width = FlexGlobals.topLevelApplication.setContentWidth();
			}
			
			// VideoPlayer
			import assets.classes.VideoPlayer;
			public var videoPlayer:VideoPlayer;
			
			public function initPlayer():void {				
				videoPlayer = new VideoPlayer("ressources/videos/6_1.flv", fadePlayButtonIn, fadePlayButtonOut, videoFadeIn, videoFadeOut, playBtn, screen, vid);
				// lokale IDs an Klasse übergeben
				videoPlayer.screen = screen;
				videoPlayer.vid = vid;
				videoPlayer.playBtn = playBtn;
				videoPlayer.videoFadeIn = videoFadeIn;
				videoPlayer.videoFadeOut = videoFadeOut;
				videoPlayer.fadePlayButtonIn = fadePlayButtonIn;
				videoPlayer.fadePlayButtonOut = fadePlayButtonOut;
				
				// füge Videoplayer hinzu
				vid.addChild(videoPlayer.movie);
			}
			
			// handelt Swipe-Verhalten (via gestureSwipe="")
			private function onSwipe(event:TransformGestureEvent):void {
				// offsetX -1: Swipe nach links (vor)
				// offsetX 1: Swipe nach rechts (zurück)
				if(event.offsetX == -1) {
					navigator.pushView(gzb_2, null, null, pushLeft);
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- definiere Push-Richtungen (für Slider in Anleitung) -->
		<s:SlideViewTransition id="pushRight" mode="push" duration="200" direction="right" />
		<s:SlideViewTransition id="pushLeft" mode="push" duration="200" direction="left" />
		<!-- Deklaration Ein- und Ausfaden des Playbuttons und des Videocontainer-->
		<s:Fade id="fadePlayButtonIn" duration="500" target="{playBtn}" alphaFrom="0" alphaTo="1"/>
		<s:Fade id="fadePlayButtonOut" duration="500" target="{playBtn}" alphaFrom="1" alphaTo="0"/>	
		<s:Fade id="videoFadeIn" duration="2000" target="{vid}" alphaFrom="0" alphaTo="1"/>	
		<s:Fade id="videoFadeOut" duration="500" target="{vid}" alphaFrom="1" alphaTo="0"/>	
	</fx:Declarations>
	
	<s:VGroup verticalAlign="top">
		<!-- Container Titel -->
		<s:HGroup verticalAlign="top" horizontalAlign="left" paddingTop="105" paddingLeft="80" paddingRight="80" paddingBottom="50">
			<s:Label text="{resourceManager.getString('resources', 'GZB')}" color="black" styleName="slider-title" />
		</s:HGroup>
		
		<!-- Container Medieninhalt -->
		<s:Group>
			<s:SWFLoader id="vid"  />
			<s:Button id="playBtn" horizontalCenter="1" verticalCenter="1" skinClass="assets.skins.PlayerBtn_GZBPlay_Skin"/>
		</s:Group>
		
		<!-- Container Trennlinie horizontal -->
		<s:HGroup horizontalAlign="left" paddingTop="50" paddingLeft="80" paddingRight="80" paddingBottom="50" >	
			<s:Rect bottom="0" id="trennlinie">
				<s:stroke>
					<s:SolidColorStroke color="#bfbfbf" weight="2" />
				</s:stroke>
			</s:Rect>
		</s:HGroup>	
		<!-- Container Text-Beschreibung -->
		<s:HGroup horizontalAlign="left" paddingLeft="80" paddingRight="80">
			<s:List id="sliderList" itemRenderer="renderers.SliderListRenderer" horizontalScrollPolicy="off">
				<s:ArrayList>
					<fx:Object styleName="gzb" icon="@Embed('assets/icons/numbers/01.png')" label="{resourceManager.getString('resources', 'SLIDE_6_1_1')}" />
					<fx:Object styleName="gzb" icon="@Embed('assets/icons/numbers/02.png')" label="{resourceManager.getString('resources', 'SLIDE_6_1_2')}" />
					<fx:Object styleName="gzb" icon="@Embed('assets/icons/numbers/03.png')" label="{resourceManager.getString('resources', 'SLIDE_6_1_3')}" />
				</s:ArrayList>
			</s:List>
		</s:HGroup>
	</s:VGroup>	
	
	<!-- Container Slider-Buttons -->
	<s:Group width="100%" height="148" bottom="0">
		<s:Rect width="100%" height="100%">
			<s:fill><s:SolidColor color="0x4e2900" /></s:fill>
		</s:Rect>
		<s:HGroup horizontalCenter="0">
			<s:Button click="navigator.pushView(Getraenkezubereitung)" styleName="sliderbtn-active" />
			<s:Button click="navigator.pushView(gzb_2, null, null, pushLeft)" styleName="sliderbtn" />
			<s:Button click="navigator.pushView(gzb_3, null, null, pushLeft)" styleName="sliderbtn" />
			<s:Button click="navigator.pushView(gzb_4, null, null, pushLeft)" styleName="sliderbtn" />
			<s:Button click="navigator.pushView(gzb_5, null, null, pushLeft)" styleName="sliderbtn" />
		</s:HGroup>
	</s:Group>	
	
</s:View>
