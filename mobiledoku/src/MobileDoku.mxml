<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   applicationDPI="480"
			   applicationComplete="init(event)">
	
	<fx:Script>
		<![CDATA[
			import com.adobe.utils.LocaleUtil;
			
			import flash.utils.getDefinitionByName;
			
			import mx.events.FlexEvent;
			import mx.resources.ResourceManager;
			
			import spark.events.IndexChangeEvent;
			
			import views.Getraenkezubereitung;
			import views.Home;
			
			// Farb-Konstante für Headernavigation
			public var someColorConstant:uint = style;
			
			// Standard-Farbe Headernavigation
			private var style:uint;

			[Bindable]
			private var titelNeu2:String;
			
			// deklariere Variablen für Navigation
			private var isOpen:Boolean;	
			
			[Bindable]
			private var currentStageWidth:Number;
			
			[Bindable]
			private var currentStageHeight:Number;

			
			// wenn App initialisiert wird ...
			protected function init(event:FlexEvent):void {
				stage.addEventListener(Event.RESIZE, orientationHandler);
				
				currentStageWidth = stage.stageWidth*-1;
				lateralMenu.x = currentStageWidth;
				currentStageHeight = navigator.height-45;
				lateralMenu.height = currentStageHeight;			
				lateralMenu.x = currentStageWidth;
				isOpen = false;
				
				// definiere Array mit den Sprachen, die unterstützt werden. Fallback-Sprache ist "de_CH"
				var sortedLocales:Array = LocaleUtil.sortLanguagesByPreference(['de_CH', 'en_US'], Capabilities.languages, 'de_CH');
				// verwendeten Sprachraum erkennen
				ResourceManager.getInstance().localeChain = sortedLocales;
				// Test mit bestimmter Sprache
				// ResourceManager.getInstance().localeChain=["en_US"];
				
			}
			

			// Orientierung Gerät Portrait/Landscape -> evtl. deaktivieren
			private function orientationHandler(event:Event):void {
				currentStageWidth = stage.stageWidth*-1;
				
				if(isOpen == false){
					lateralMenu.x = currentStageWidth;
				}
				
				currentStageHeight = navigator.height-45;
				lateralMenu.height = currentStageHeight;	
				
				trace(lateralMenu.height);
			}
			
			protected function menuHandler(event:MouseEvent):void {
				if(isOpen == true){
					moveOut.play();
					isOpen = false;
				} else if(isOpen == false){
					moveIn.play();
					isOpen = true;
				}
			}
			
			protected function changeHandler(event:IndexChangeEvent):void {
				isOpen = false;
				moveOut.play();
				// zeige ausgewählte View
				navigator.pushView(componentsList.selectedItem.view);
				
				// wechselt anhand ausgewählter View Color .. 
				// siehe CustomActionBarSkin -> wird aber scheinbar früher instanziert
				testFunction(componentsList.selectedItem.view);
			}
			
			public function testFunction(ausgewaehlt:Class):String {
				var jetzt:Class = ausgewaehlt;
				if (jetzt == views.Getraenkezubereitung) {
					style = 0xff0000; 
					titelNeu2 = "Getr";
				} else if (jetzt == views.Home) {
					style = 0x333333; 
					titelNeu2 = "Home";
				}
				
				return titelNeu2;
			}
			
			protected function menuBackgroundHandler(event:MouseEvent):void {
				isOpen = false;
				moveOut.play();
			}
		
			// rendert das Menu
			import renderers.MenuRenderer;
		]]>
	</fx:Script>

	<fx:Style source="/assets/css/main.css"/>
	
	<!-- Aktiviere Ressourcen-Bundle für die Sprachen -->
	<fx:Metadata>
		[ResourceBundle("resources")]
	</fx:Metadata>
	
	<fx:Declarations>
		<s:Move id="moveIn" duration="200" target="{lateralMenu}" xTo="0"/>
		<s:Move id="moveOut" duration="200" target="{lateralMenu}" xTo="{currentStageWidth}"/>
	</fx:Declarations>
	
	<s:TextArea text="{titelNeu2}" top="430" color="yellow" />
	
	<!-- Header-Leiste / firstView ist der HomeScreen --> 
	<s:ViewNavigator id="navigator" firstView="views.Home" width="100%" height="100%">
		<s:navigationContent>
			<!--<s:Button  height="70" width="154" label="Menu" click="menuHandler(event)"/>-->
			<s:Button styleName="headernav_btn" height="100%" width="100%" label="" click="menuHandler(event)"/>
		</s:navigationContent>
		
		<s:titleContent>
			<s:Label styleName="headernav-title" text="{resourceManager.getString('resources', 'MAIN_TITLE')}" />
		</s:titleContent>
		
		<s:actionContent>
			<s:Button styleName="headernav-btn" label="" click="navigator.popToFirstView()"/>
			<s:Button styleName="headernav-btn" label="" click="navigator.popToFirstView()"/>
		</s:actionContent>
	</s:ViewNavigator>
	<!-- Navigation von links -->
	<s:Group id="lateralMenu" width="100%" y="136">
		<s:Graphic width="100%" height="100%" click="menuBackgroundHandler(event)">
			<!-- Transparenz, die sich bei Öffnen Navigation über View schiebt -->
			<s:BitmapImage width="100%" height="100%" scaleMode="zoom" source="@Embed('assets/images/bg.png')"/>
		</s:Graphic>
		
		<s:List id="componentsList" itemRenderer="renderers.MenuRenderer" width="700" height="100%" change="changeHandler(event)" contentBackgroundColor="#2f2f2f" alpha="0.95">
			<s:ArrayList>
				<fx:Object iconNormal="@Embed('assets/icons/nav_home_w.svg')" 
						   iconActive="@Embed('assets/icons/nav_home_b.svg')" label="{resourceManager.getString('resources', 'HOME')}" type="view" view="{Home}" />
				
				<fx:Object iconNormal="@Embed('assets/icons/nav_suche_w.svg')" 
						   iconActive="@Embed('assets/icons/nav_suche_b.svg')" label="{resourceManager.getString('resources', 'SUCHE')}" type="view" view="{Home}" />
				
				<fx:Object iconNormal="@Embed('assets/icons/nav_ibn_w.svg')" 
						   iconActive="@Embed('assets/icons/nav_ibn_b.svg')" label="{resourceManager.getString('resources', 'IBN')}" type="view" view="{Home}" />				
				
				<fx:Object iconNormal="@Embed('assets/icons/nav_gzb_w.svg')" 
						   iconActive="@Embed('assets/icons/nav_gzb_b.svg')" label="{resourceManager.getString('resources', 'GZB')}" type="view" view="{Getraenkezubereitung}"/>
			
				<fx:Object iconNormal="@Embed('assets/icons/nav_reinigung_w.svg')" 
						   iconActive="@Embed('assets/icons/nav_reinigung_b.svg')" label="{resourceManager.getString('resources', 'REINIGUNG')}" type="view" view="{Getraenkezubereitung}"/>
				
				<fx:Object iconNormal="@Embed('assets/icons/nav_entkalkung_w.svg')" 
						   iconActive="@Embed('assets/icons/nav_entkalkung_b.svg')" label="{resourceManager.getString('resources', 'ENTKALKUNG')}" type="view" view="{Getraenkezubereitung}"/>

				<fx:Object iconNormal="@Embed('assets/icons/nav_sbh_w.svg')" 
						   iconActive="@Embed('assets/icons/nav_sbh_b.svg')" label="{resourceManager.getString('resources', 'SBH')}" type="view" view="{Getraenkezubereitung}"/>

				<fx:Object iconNormal="@Embed('assets/icons/nav_hotline_w.svg')" 
						   iconActive="@Embed('assets/icons/nav_hotline_b.svg')" label="{resourceManager.getString('resources', 'HOTLINE')}" type="view" view="{Getraenkezubereitung}"/>

				<fx:Object iconNormal="@Embed('assets/icons/nav_shw_w.svg')" 
						   iconActive="@Embed('assets/icons/nav_shw_b.svg')" label="{resourceManager.getString('resources', 'SHW')}" type="view" view="{Getraenkezubereitung}"/>

				<fx:Object iconNormal="@Embed('assets/icons/nav_shw_w.svg')" 
						   iconActive="@Embed('assets/icons/nav_shw_b.svg')" label="{resourceManager.getString('resources', 'SPRACHE')}" type="view" view="{Getraenkezubereitung}"/>

			</s:ArrayList>
		</s:List>
	</s:Group>
	


	
</s:Application>
