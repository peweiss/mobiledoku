<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   applicationDPI="480"
			   applicationComplete="init(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import spark.events.IndexChangeEvent;
			
			// Imports für Mehrsprachigkeit
			import com.adobe.utils.LocaleUtil;
			// ResourceManager: für Lokalisierungs-Ressourcen 
			import mx.resources.ResourceManager;
			
			// importiere alle Views
			import views.Home;
			import views.Getraenkezubereitung;

			// deklariere Variablen für Navigation
			private var isOpen:Boolean;	
			
			[Bindable]
			private var currentStageWidth:Number;
			
			[Bindable]
			private var currentStageHeight:Number;
			
			// wenn App initialisiert wird ...
			protected function init(event:FlexEvent):void {
				stage.addEventListener(Event.RESIZE, orientationHandler);
				
				currentStageWidth = stage.stageWidth*-1;
				lateralMenu.x = currentStageWidth;
				currentStageHeight = navigator.height-45;
				lateralMenu.height = currentStageHeight;			
				lateralMenu.x = currentStageWidth;
				isOpen = false;
				
				// definiere Array mit den Sprachen, die unterstützt werden. Fallback-Sprache ist "de_CH"
				var sortedLocales:Array = LocaleUtil.sortLanguagesByPreference(['de_CH', 'en_US'], Capabilities.languages, 'de_CH');
				// verwendeten Sprachraum erkennen
				ResourceManager.getInstance().localeChain = sortedLocales;
				// Test mit bestimmter Sprache
				// ResourceManager.getInstance().localeChain=["en_US"];
			}
			
			// Orientierung Gerät Portrait/Landscape -> evtl. deaktivieren
			private function orientationHandler(event:Event):void {
				currentStageWidth = stage.stageWidth*-1;
				
				if(isOpen == false){
					lateralMenu.x = currentStageWidth;
				}
				
				currentStageHeight = navigator.height-45;
				lateralMenu.height = currentStageHeight;	
				
				trace(lateralMenu.height);
			}
			
			protected function menuHandler(event:MouseEvent):void {
				if(isOpen == true){
					moveOut.play();
					isOpen = false;
				} else if(isOpen == false){
					moveIn.play();
					isOpen = true;
				}
			}
			
			protected function changeHandler(event:IndexChangeEvent):void {
				isOpen = false;
				moveOut.play();
				// zeige ausgewählte View
				navigator.pushView(componentsList.selectedItem.view);
			}
			
			protected function menuBackgroundHandler(event:MouseEvent):void {
				isOpen = false;
				moveOut.play();
			}
			
			// rendert das Menu
			import renderers.MenuRenderer;
		]]>
	</fx:Script>

	<fx:Style source="/assets/css/main.css"/>
	
	<!-- Aktiviere Ressourcen-Bundle für die Sprachen -->
	<fx:Metadata>
		[ResourceBundle("resources")]
	</fx:Metadata>
	
	<fx:Declarations>
		<s:Move id="moveIn" duration="200" target="{lateralMenu}" xTo="0"/>
		<s:Move id="moveOut" duration="200" target="{lateralMenu}" xTo="{currentStageWidth}"/>
	</fx:Declarations>
	
	<!-- Header-Leiste / firstView ist der HomeScreen --> 
	<s:ViewNavigator id="navigator" firstView="views.Home" width="100%" height="100%">
		<s:navigationContent>
			<!--<s:Button icon="@Embed('assets/images/logo.png')" height="70" width="154" label="Menu" click="menuHandler(event)"/>-->
			<s:Button styleName="headernav_btn" height="100%" width="100%" label="" click="menuHandler(event)"/>
		</s:navigationContent>
		
		<s:titleContent>
			<s:Label styleName="headernav_title" text="{resourceManager.getString('resources', 'MAIN_TITLE')}" />
		</s:titleContent>
		
		<s:actionContent>
			<s:Button styleName="headernav_btn" label="" click="navigator.popToFirstView()"/>
			<s:Button styleName="headernav_btn" label="" click="navigator.popToFirstView()"/>
		</s:actionContent>
	</s:ViewNavigator>
	
	<!-- Navigation von links -->
	<s:Group id="lateralMenu" width="100%" y="145">
		<s:Graphic width="100%" height="100%" click="menuBackgroundHandler(event)">
			<!-- Transparenz, die sich bei Öffnen Navigation über View schiebt -->
			<s:BitmapImage width="100%" height="100%" scaleMode="zoom" source="@Embed('assets/images/bg.png')"/>
		</s:Graphic>
		
		<s:List id="componentsList" itemRenderer="renderers.MenuRenderer" width="715" height="100%" change="changeHandler(event)" contentBackgroundColor="#000000">
			<s:ArrayList>
				<fx:Object label="{resourceManager.getString('resources', 'INIT_WELCOME_MSG')}" type="view" view="{Home}"/>
				<!--	<fx:Object label="CalloutButton" type="view" view="{Suche}"/>
				<fx:Object label="CheckBox" type="view" view="{Inbetriebnahme}"/>-->
				
				<fx:Object label="{resourceManager.getString('resources', 'INIT_WELCOME_MSG')}" type="view" view="{Getraenkezubereitung}"/>
			<!--	<fx:Object label="List" type="view" view="{Reinigung}"/>
				<fx:Object label="MobileGrid" type="view" view="{Entkalkung}"/>
				<fx:Object label="RadioButton" type="view" view="{Stoerungsbehebung}"/>
				<fx:Object label="SpinnerList" type="view" view="{Hotline}"/>
				<fx:Object label="TextInput" type="view" view="{Sicherheitshinweise}"/>
				<fx:Object label="ToggleSwitch" type="view" view="{Sprache}"/>-->
			</s:ArrayList>
		</s:List>
	</s:Group>
	
	
	
</s:Application>
